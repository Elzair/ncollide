{"name":"ncollide","tagline":"Collision detection library in Rust.","body":"# About ncollide\r\n\r\n**ncollide** is a 2 and 3-dimensional collision detection library written with the\r\nrust programming language.\r\n\r\n# Features\r\n- Dynamic bounding volume tree based broad phase.\r\n- Ball vs. ball collision detection.\r\n- Plane vs. any convex object collision detection.\r\n- Collision detection between arbitrary convex objects.\r\n- Compound geometries.\r\n- Ray-casting.\r\n- Time of impact computation  for objects without rotational movement (compound vs. compound is not\r\n  yet implemented).\r\n\r\nFor more, check out the documentations of the different variants of the library:\r\n* [ncollide2df32](doc/ncollide2df32), for 2d collision detection using single-precision numbers.\r\n* [ncollide3df32](doc/ncollide3df32), for 3d collision detection using single-precision numbers.\r\n* [ncollide4df32](doc/ncollide4df32), for 4d collision detection using single-precision numbers.\r\n* [ncollide2df64](doc/ncollide2df64), for 2d collision detection using double-precision numbers.\r\n* [ncollide3df64](doc/ncollide3df64), for 3d collision detection using double-precision numbers.\r\n* [ncollide4df64](doc/ncollide4df64), for 4d collision detection using double-precision numbers.\r\n\r\nThey are all almost identical, except for the vector and matrix types.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}