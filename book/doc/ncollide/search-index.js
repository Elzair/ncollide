var searchIndex = [{ty:"mod",name:"",path:"ncollide",desc:"ncollide  [![Build Status](https://travis-ci.org/sebcrozet/ncollide.png?branch=master)](https://travis-ci.org/sebcrozet/ncollide)\n========"},{ty:"mod",name:"bounding_volume",path:"ncollide",desc:"Bounding volumes."},{ty:"mod",name:"aabb",path:"ncollide::bounding_volume",desc:""},{ty:"struct",name:"AABB",path:"ncollide::bounding_volume::aabb",desc:"An Axis Aligned Bounding Box."},{ty:"struct",name:"WithAABB",path:"ncollide::bounding_volume::aabb",desc:"Wrapper which implements `HasBoundingVolume<M, AABB<N, V>>` for objects implementing `HasAABB<N, V, M>`."},{ty:"fn",name:"implicit_shape_aabb",path:"ncollide::bounding_volume::aabb",desc:"Builds the AABB of an implicit shape."},{ty:"trait",name:"HasAABB",path:"ncollide::bounding_volume::aabb",desc:"Traits of objects approximable by an AABB."},{ty:"tymethod",name:"aabb",path:"ncollide::bounding_volume::aabb",desc:"The objectâ€™s AABB.",parent:'37'},{ty:"method",name:"to_str",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"eq",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"ne",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"clone",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"encode",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"decode",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"mins",path:"ncollide::bounding_volume::aabb",desc:"Reference to the AABB point with the smallest components along each axis.",parent:'53'},{ty:"method",name:"maxs",path:"ncollide::bounding_volume::aabb",desc:"Reference to the AABB point with the bigest components along each axis.",parent:'53'},{ty:"method",name:"new",path:"ncollide::bounding_volume::aabb",desc:"Creates a new AABB.",parent:'53'},{ty:"method",name:"new_invalid",path:"ncollide::bounding_volume::aabb",desc:"Creates an invalid AABB with:\n    * `mins = Bounded::max_value()`\n    * `maxs = Bounded::max_value()`.\nThis is useful to build aabb using merges.",parent:'53'},{ty:"method",name:"intersects",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"contains",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"merge",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"merged",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"translation",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"inv_translation",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"append_translation",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"append_translation_cpy",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"prepend_translation",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"prepend_translation_cpy",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"set_translation",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"loosen",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"loosened",path:"ncollide::bounding_volume::aabb",desc:"",parent:'53'},{ty:"method",name:"clone",path:"ncollide::bounding_volume::aabb",desc:"",parent:'1175'},{ty:"method",name:"eq",path:"ncollide::bounding_volume::aabb",desc:"",parent:'1175'},{ty:"method",name:"ne",path:"ncollide::bounding_volume::aabb",desc:"",parent:'1175'},{ty:"method",name:"deep_clone",path:"ncollide::bounding_volume::aabb",desc:"",parent:'1175'},{ty:"method",name:"bounding_volume",path:"ncollide::bounding_volume::aabb",desc:"",parent:'1175'},{ty:"mod",name:"bounding_volume",path:"ncollide::bounding_volume",desc:""},{ty:"trait",name:"HasBoundingVolume",path:"ncollide::bounding_volume::bounding_volume",desc:"Traits of objects having a bounding volume."},{ty:"tymethod",name:"bounding_volume",path:"ncollide::bounding_volume::bounding_volume",desc:"The object bounding volume.",parent:'1412'},{ty:"trait",name:"BoundingVolume",path:"ncollide::bounding_volume::bounding_volume",desc:"Trait of bounding volumes."},{ty:"tymethod",name:"intersects",path:"ncollide::bounding_volume::bounding_volume",desc:"Checks if this bounding volume intersect with another one.",parent:'1418'},{ty:"tymethod",name:"contains",path:"ncollide::bounding_volume::bounding_volume",desc:"Checks if this bounding volume contains another one.",parent:'1418'},{ty:"tymethod",name:"merge",path:"ncollide::bounding_volume::bounding_volume",desc:"Merges this bounding volume with another one. The merge is done in-place.",parent:'1418'},{ty:"tymethod",name:"merged",path:"ncollide::bounding_volume::bounding_volume",desc:"Merges this bounding volume with another one.",parent:'1418'},{ty:"trait",name:"LooseBoundingVolume",path:"ncollide::bounding_volume::bounding_volume",desc:"Trait of loose bounding volume."},{ty:"tymethod",name:"loosen",path:"ncollide::bounding_volume::bounding_volume",desc:"Enlarges this bounding volume.",parent:'1450'},{ty:"tymethod",name:"loosened",path:"ncollide::bounding_volume::bounding_volume",desc:"Creates a new, enlarged version, of this bounding volume.",parent:'1450'},{ty:"mod",name:"aabb_box",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_box",desc:"",parent:'3211'},{ty:"mod",name:"aabb_cone",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_cone",desc:"",parent:'4301'},{ty:"mod",name:"aabb_ball",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_ball",desc:"",parent:'2525'},{ty:"mod",name:"aabb_cylinder",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_cylinder",desc:"",parent:'4880'},{ty:"mod",name:"aabb_capsule",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_capsule",desc:"",parent:'3756'},{ty:"mod",name:"aabb_plane",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_plane",desc:"",parent:'2833'},{ty:"mod",name:"aabb_convex",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_convex",desc:"",parent:'5459'},{ty:"mod",name:"aabb_compound",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_compound",desc:"",parent:'7729'},{ty:"mod",name:"aabb_triangle",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_triangle",desc:"",parent:'8933'},{ty:"mod",name:"aabb_segment",path:"ncollide::bounding_volume",desc:""},{ty:"method",name:"aabb",path:"ncollide::bounding_volume::aabb_segment",desc:"",parent:'8358'},{ty:"mod",name:"geom",path:"ncollide",desc:"Geometric primitives."},{ty:"mod",name:"geom",path:"ncollide::geom",desc:"Enum grouping the most useful geometric shapes."},{ty:"trait",name:"Geom",path:"ncollide::geom::geom",desc:""},{ty:"tymethod",name:"duplicate",path:"ncollide::geom::geom",desc:"",parent:'2214'},{ty:"trait",name:"ConcaveGeom",path:"ncollide::geom::geom",desc:""},{ty:"tymethod",name:"map_part_at",path:"ncollide::geom::geom",desc:"",parent:'2253'},{ty:"tymethod",name:"map_transformed_part_at",path:"ncollide::geom::geom",desc:"",parent:'2253'},{ty:"tymethod",name:"approx_interferences_with_aabb",path:"ncollide::geom::geom",desc:"",parent:'2253'},{ty:"tymethod",name:"approx_interferences_with_ray",path:"ncollide::geom::geom",desc:"",parent:'2253'},{ty:"tymethod",name:"aabb_at",path:"ncollide::geom::geom",desc:"",parent:'2253'},{ty:"mod",name:"ball",path:"ncollide::geom",desc:"\nSupport mapping based Ball geometry.\n"},{ty:"struct",name:"Ball",path:"ncollide::geom::ball",desc:"A Ball geometry.\n \n - `N`: numeric type used for the ball radius."},{ty:"method",name:"eq",path:"ncollide::geom::ball",desc:"",parent:'2525'},{ty:"method",name:"ne",path:"ncollide::geom::ball",desc:"",parent:'2525'},{ty:"method",name:"to_str",path:"ncollide::geom::ball",desc:"",parent:'2525'},{ty:"method",name:"clone",path:"ncollide::geom::ball",desc:"",parent:'2525'},{ty:"method",name:"encode",path:"ncollide::geom::ball",desc:"",parent:'2525'},{ty:"method",name:"decode",path:"ncollide::geom::ball",desc:"",parent:'2525'},{ty:"method",name:"new",path:"ncollide::geom::ball",desc:"Creates a new ball from its radius and center.",parent:'2525'},{ty:"method",name:"radius",path:"ncollide::geom::ball",desc:"The ball radius.",parent:'2525'},{ty:"mod",name:"plane",path:"ncollide::geom",desc:"\nSupport mapping based Plane geometry.\n"},{ty:"struct",name:"Plane",path:"ncollide::geom::plane",desc:"Implicit description of a plane."},{ty:"structfield",name:"normal",path:"ncollide::geom::plane",desc:"The plane normal.",parent:'2833'},{ty:"method",name:"eq",path:"ncollide::geom::plane",desc:"",parent:'2833'},{ty:"method",name:"ne",path:"ncollide::geom::plane",desc:"",parent:'2833'},{ty:"method",name:"to_str",path:"ncollide::geom::plane",desc:"",parent:'2833'},{ty:"method",name:"clone",path:"ncollide::geom::plane",desc:"",parent:'2833'},{ty:"method",name:"encode",path:"ncollide::geom::plane",desc:"",parent:'2833'},{ty:"method",name:"decode",path:"ncollide::geom::plane",desc:"",parent:'2833'},{ty:"method",name:"new",path:"ncollide::geom::plane",desc:"Builds a new plane from its center and its normal.",parent:'2833'},{ty:"method",name:"new_normalized",path:"ncollide::geom::plane",desc:"Builds a new plane from its center and its normal.",parent:'2833'},{ty:"method",name:"normal",path:"ncollide::geom::plane",desc:"The plane normal.",parent:'2833'},{ty:"mod",name:"box_geom",path:"ncollide::geom",desc:"\nSupport mapping based Box geometry.\n"},{ty:"struct",name:"Box",path:"ncollide::geom::box_geom",desc:"Geometry of a box."},{ty:"method",name:"eq",path:"ncollide::geom::box_geom",desc:"",parent:'3211'},{ty:"method",name:"ne",path:"ncollide::geom::box_geom",desc:"",parent:'3211'},{ty:"method",name:"to_str",path:"ncollide::geom::box_geom",desc:"",parent:'3211'},{ty:"method",name:"clone",path:"ncollide::geom::box_geom",desc:"",parent:'3211'},{ty:"method",name:"encode",path:"ncollide::geom::box_geom",desc:"",parent:'3211'},{ty:"method",name:"decode",path:"ncollide::geom::box_geom",desc:"",parent:'3211'},{ty:"method",name:"new",path:"ncollide::geom::box_geom",desc:"Creates a new box from its half-extents. Half-extents are the box half-width along each\naxis. Each half-extent must be greater than 0.04.",parent:'3211'},{ty:"method",name:"new_with_margin",path:"ncollide::geom::box_geom",desc:"Creates a new box from its half-extents and its margin. Half-extents are the box half-width\nalong each axis. Each half-extent must be greater than the margin.",parent:'3211'},{ty:"method",name:"half_extents",path:"ncollide::geom::box_geom",desc:"The half-extents of this box. Half-extents are the box half-width along each axis.",parent:'3211'},{ty:"method",name:"margin",path:"ncollide::geom::box_geom",desc:"",parent:'3211'},{ty:"mod",name:"capsule",path:"ncollide::geom",desc:"\nSupport mapping based Capsule geometry.\n  "},{ty:"struct",name:"Capsule",path:"ncollide::geom::capsule",desc:"Implicit description of a capsule geometry with its principal axis aligned with the `x` axis."},{ty:"method",name:"eq",path:"ncollide::geom::capsule",desc:"",parent:'3756'},{ty:"method",name:"ne",path:"ncollide::geom::capsule",desc:"",parent:'3756'},{ty:"method",name:"to_str",path:"ncollide::geom::capsule",desc:"",parent:'3756'},{ty:"method",name:"clone",path:"ncollide::geom::capsule",desc:"",parent:'3756'},{ty:"method",name:"encode",path:"ncollide::geom::capsule",desc:"",parent:'3756'},{ty:"method",name:"decode",path:"ncollide::geom::capsule",desc:"",parent:'3756'},{ty:"method",name:"new",path:"ncollide::geom::capsule",desc:"Creates a new capsule.",parent:'3756'},{ty:"method",name:"half_height",path:"ncollide::geom::capsule",desc:"The capsule half length along the `x` axis.",parent:'3756'},{ty:"method",name:"radius",path:"ncollide::geom::capsule",desc:"The radius of the capsule's rounded part.",parent:'3756'},{ty:"mod",name:"cone",path:"ncollide::geom",desc:"\nSupport mapping based Cone geometry.\n"},{ty:"struct",name:"Cone",path:"ncollide::geom::cone",desc:"Implicit description of a cylinder geometry with its principal axis aligned with the `x` axis."},{ty:"method",name:"eq",path:"ncollide::geom::cone",desc:"",parent:'4301'},{ty:"method",name:"ne",path:"ncollide::geom::cone",desc:"",parent:'4301'},{ty:"method",name:"to_str",path:"ncollide::geom::cone",desc:"",parent:'4301'},{ty:"method",name:"clone",path:"ncollide::geom::cone",desc:"",parent:'4301'},{ty:"method",name:"encode",path:"ncollide::geom::cone",desc:"",parent:'4301'},{ty:"method",name:"decode",path:"ncollide::geom::cone",desc:"",parent:'4301'},{ty:"method",name:"new",path:"ncollide::geom::cone",desc:"Creates a new cone.",parent:'4301'},{ty:"method",name:"new_with_margin",path:"ncollide::geom::cone",desc:"Creates a new cone with a custom marin.",parent:'4301'},{ty:"method",name:"half_height",path:"ncollide::geom::cone",desc:"The cone half length along the `x` axis.",parent:'4301'},{ty:"method",name:"radius",path:"ncollide::geom::cone",desc:"The radius of the cone along all but the `x` axis.",parent:'4301'},{ty:"method",name:"margin",path:"ncollide::geom::cone",desc:"The margin around the cone.",parent:'4301'},{ty:"mod",name:"cylinder",path:"ncollide::geom",desc:"\nSupport mapping based Cylinder geometry.\n"},{ty:"struct",name:"Cylinder",path:"ncollide::geom::cylinder",desc:"Implicit description of a cylinder geometry with its principal axis aligned with the `x` axis."},{ty:"method",name:"eq",path:"ncollide::geom::cylinder",desc:"",parent:'4880'},{ty:"method",name:"ne",path:"ncollide::geom::cylinder",desc:"",parent:'4880'},{ty:"method",name:"to_str",path:"ncollide::geom::cylinder",desc:"",parent:'4880'},{ty:"method",name:"clone",path:"ncollide::geom::cylinder",desc:"",parent:'4880'},{ty:"method",name:"encode",path:"ncollide::geom::cylinder",desc:"",parent:'4880'},{ty:"method",name:"decode",path:"ncollide::geom::cylinder",desc:"",parent:'4880'},{ty:"method",name:"new",path:"ncollide::geom::cylinder",desc:"Creates a new cylinder.",parent:'4880'},{ty:"method",name:"new_with_margin",path:"ncollide::geom::cylinder",desc:"Creates a new cylinder.",parent:'4880'},{ty:"method",name:"half_height",path:"ncollide::geom::cylinder",desc:"The cylinder half length along the `x` axis.",parent:'4880'},{ty:"method",name:"radius",path:"ncollide::geom::cylinder",desc:"The radius of the cylinder along all but the `x` axis.",parent:'4880'},{ty:"method",name:"margin",path:"ncollide::geom::cylinder",desc:"Size of the margin around the cylinder.",parent:'4880'},{ty:"mod",name:"convex",path:"ncollide::geom",desc:"\nSupport mapping based Convex polytope.\n"},{ty:"struct",name:"Convex",path:"ncollide::geom::convex",desc:"Set of point assumed to form a convex polytope.\n \n  - `V`: type of the polytope points.\n  - `N`: type of the result of a dot product between two points."},{ty:"method",name:"clone",path:"ncollide::geom::convex",desc:"",parent:'5459'},{ty:"method",name:"new",path:"ncollide::geom::convex",desc:"Creates a polytope from a set of point. Those points are assumed to form\na convex polytope: convexity is not checked.",parent:'5459'},{ty:"method",name:"new_with_margin",path:"ncollide::geom::convex",desc:"Creates a polytope from a set of point and a custom margin. Those points are assumed to form\na convex polytope: convexity is not checked.",parent:'5459'},{ty:"method",name:"pts",path:"ncollide::geom::convex",desc:"",parent:'5459'},{ty:"method",name:"margin",path:"ncollide::geom::convex",desc:"",parent:'5459'},{ty:"mod",name:"minkowski_sum",path:"ncollide::geom",desc:"\nSupport mapping based Minkowski Sum geometry. Note thas the support mapping function will\nignore the transformation matrix (the first argument of the `support_point` method).\n"},{ty:"struct",name:"MinkowskiSum",path:"ncollide::geom::minkowski_sum",desc:"Implicit representation of the minkowski sum of two geometries.\nThe only way to obtain the sum points is to use its support mapping\nfunction."},{ty:"struct",name:"AnnotatedMinkowskiSum",path:"ncollide::geom::minkowski_sum",desc:"Same as the MinkowskiSum but with a support mapping which keeps track of the\noriginal supports points from the two wrapped geometries.\n - `G1`: type of the first object involved on the sum.\n - `G2`: type of the second object involved on the sum."},{ty:"typedef",name:"CSO",path:"ncollide::geom::minkowski_sum",desc:"Type of an implicit representation of the Configuration Space Obstacle\nformed by two geometric objects."},{ty:"typedef",name:"AnnotatedCSO",path:"ncollide::geom::minkowski_sum",desc:""},{ty:"method",name:"eq",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"ne",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"to_str",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"clone",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"new",path:"ncollide::geom::minkowski_sum",desc:"Builds the Minkowski sum of two geometries. Since the representation is\nimplicit, this is done in constant time.",parent:'5648'},{ty:"method",name:"m1",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"m2",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"g1",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"g2",path:"ncollide::geom::minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"eq",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"ne",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"to_str",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"clone",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"new",path:"ncollide::geom::minkowski_sum",desc:"Builds the Minkowski sum of two geometries. Since the representation is\nimplicit, this is done in constant time.",parent:'6070'},{ty:"method",name:"m1",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"m2",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"g1",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"g2",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"clone",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"to_str",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"encode",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"decode",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"zero",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"is_zero",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"one",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"sub",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"add",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"neg",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"dim",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"dot",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"sub_dot",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"norm",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"sqnorm",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"normalize_cpy",path:"ncollide::geom::minkowski_sum",desc:"Be careful: only the `point` is normalized, not `orig1` nor `orig2`.",parent:'6492'},{ty:"method",name:"normalize",path:"ncollide::geom::minkowski_sum",desc:"Be careful: only the `point` is normalized, not `orig1` nor `orig2`.",parent:'6492'},{ty:"method",name:"div",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"mul",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"eq",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"ne",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"approx_epsilon",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"approx_eq",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"method",name:"approx_eq_eps",path:"ncollide::geom::minkowski_sum",desc:"",parent:'6492'},{ty:"mod",name:"reflection",path:"ncollide::geom",desc:"\nSupport mapping based reflected geometry.\n"},{ty:"struct",name:"Reflection",path:"ncollide::geom::reflection",desc:"Implicit represention of the reflection of a geometric object.\nA reflection is obtained with the central symetry wrt the origin."},{ty:"method",name:"eq",path:"ncollide::geom::reflection",desc:"",parent:'7507'},{ty:"method",name:"ne",path:"ncollide::geom::reflection",desc:"",parent:'7507'},{ty:"method",name:"to_str",path:"ncollide::geom::reflection",desc:"",parent:'7507'},{ty:"method",name:"clone",path:"ncollide::geom::reflection",desc:"",parent:'7507'},{ty:"method",name:"new",path:"ncollide::geom::reflection",desc:"Build the reflection of a geometry. Since the representation is implicit,\nthe reflection computation is done in constant time.",parent:'7507'},{ty:"method",name:"g",path:"ncollide::geom::reflection",desc:"",parent:'7507'},{ty:"mod",name:"compound",path:"ncollide::geom",desc:"\nGeometry composed from the union of primitives.\n"},{ty:"struct",name:"Compound",path:"ncollide::geom::compound",desc:"A compound geometry with an aabb bounding volume. AÂ compound geometry is a geometry composed of\nthe union of several simpler geometry. This is the main way of creating a concave geometry from\nconvex parts. Each parts can have its own delta transformation to shift or rotate it with\nregard to the other geometries."},{ty:"method",name:"clone",path:"ncollide::geom::compound",desc:"",parent:'7729'},{ty:"method",name:"new",path:"ncollide::geom::compound",desc:"Builds a new compound shape from a list of shape with their respective delta\ntransformation.",parent:'7729'},{ty:"method",name:"shapes",path:"ncollide::geom::compound",desc:"The shapes of this compound geometry.",parent:'7729'},{ty:"method",name:"bvt",path:"ncollide::geom::compound",desc:"The optimization structure used by this compound geometry.",parent:'7729'},{ty:"method",name:"bounding_volumes",path:"ncollide::geom::compound",desc:"The shapes bounding volumes.",parent:'7729'},{ty:"method",name:"map_part_at",path:"ncollide::geom::compound",desc:"",parent:'7729'},{ty:"method",name:"map_transformed_part_at",path:"ncollide::geom::compound",desc:"",parent:'7729'},{ty:"method",name:"approx_interferences_with_aabb",path:"ncollide::geom::compound",desc:"",parent:'7729'},{ty:"method",name:"approx_interferences_with_ray",path:"ncollide::geom::compound",desc:"",parent:'7729'},{ty:"method",name:"aabb_at",path:"ncollide::geom::compound",desc:"",parent:'7729'},{ty:"mod",name:"segment",path:"ncollide::geom",desc:""},{ty:"struct",name:"Segment",path:"ncollide::geom::segment",desc:""},{ty:"structfield",name:"margin",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"structfield",name:"a",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"structfield",name:"b",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"encode",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"decode",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"clone",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"new",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"new_with_margin",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"a",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"b",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"margin",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"nvertices",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"method",name:"new_with_vertices_and_indices",path:"ncollide::geom::segment",desc:"",parent:'8358'},{ty:"mod",name:"triangle",path:"ncollide::geom",desc:""},{ty:"struct",name:"Triangle",path:"ncollide::geom::triangle",desc:""},{ty:"structfield",name:"margin",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"structfield",name:"a",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"structfield",name:"b",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"structfield",name:"c",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"encode",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"decode",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"clone",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"new",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"new_with_margin",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"a",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"b",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"c",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"margin",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"nvertices",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"method",name:"new_with_vertices_and_indices",path:"ncollide::geom::triangle",desc:"",parent:'8933'},{ty:"mod",name:"mesh",path:"ncollide::geom",desc:"\n2d line strip, 3d triangle Mesh, and nd subsimplex mesh.\n"},{ty:"struct",name:"Mesh",path:"ncollide::geom::mesh",desc:"Geometry commonly known as a 2d line strip or a 3d triangle mesh."},{ty:"trait",name:"MeshElement",path:"ncollide::geom::mesh",desc:""},{ty:"tymethod",name:"nvertices",path:"ncollide::geom::mesh",desc:"",parent:'9735'},{ty:"tymethod",name:"new_with_vertices_and_indices",path:"ncollide::geom::mesh",desc:"",parent:'9735'},{ty:"method",name:"clone",path:"ncollide::geom::mesh",desc:"",parent:'9766'},{ty:"method",name:"new",path:"ncollide::geom::mesh",desc:"Builds a new mesh with a default margin of 0.04.",parent:'9766'},{ty:"method",name:"new_with_margin",path:"ncollide::geom::mesh",desc:"Builds a new mesh with a custom margin.",parent:'9766'},{ty:"method",name:"vertices",path:"ncollide::geom::mesh",desc:"The vertices of this subsimplex mesh.",parent:'9766'},{ty:"method",name:"bounding_volumes",path:"ncollide::geom::mesh",desc:"Bounding volumes of the subsimplices.",parent:'9766'},{ty:"method",name:"indices",path:"ncollide::geom::mesh",desc:"The indices of this subsimplex mesh.",parent:'9766'},{ty:"method",name:"uvs",path:"ncollide::geom::mesh",desc:"The texture coordinates of this subsimplex mesh.",parent:'9766'},{ty:"method",name:"bvt",path:"ncollide::geom::mesh",desc:"The acceleration structure used for efficient collision detection and ray casting.",parent:'9766'},{ty:"method",name:"margin",path:"ncollide::geom::mesh",desc:"The collision margin used by this mesh.",parent:'9766'},{ty:"method",name:"map_part_at",path:"ncollide::geom::mesh",desc:"",parent:'9766'},{ty:"method",name:"map_transformed_part_at",path:"ncollide::geom::mesh",desc:"",parent:'9766'},{ty:"method",name:"approx_interferences_with_aabb",path:"ncollide::geom::mesh",desc:"",parent:'9766'},{ty:"method",name:"approx_interferences_with_ray",path:"ncollide::geom::mesh",desc:"",parent:'9766'},{ty:"method",name:"aabb_at",path:"ncollide::geom::mesh",desc:"",parent:'9766'},{ty:"method",name:"aabb",path:"ncollide::geom::mesh",desc:"",parent:'9766'},{ty:"mod",name:"ray",path:"ncollide",desc:"Ray casting utilities."},{ty:"mod",name:"ray",path:"ncollide::ray",desc:"Traits and structure needed to cast rays."},{ty:"struct",name:"Ray",path:"ncollide::ray::ray",desc:"A Ray."},{ty:"structfield",name:"orig",path:"ncollide::ray::ray",desc:"Starting point of the ray.",parent:'10919'},{ty:"structfield",name:"dir",path:"ncollide::ray::ray",desc:"Direction of the ray.",parent:'10919'},{ty:"trait",name:"RayCastWithTransform",path:"ncollide::ray::ray",desc:"Traits of transformable objects which can be tested for intersection with a ray."},{ty:"method",name:"toi_with_transform_and_ray",path:"ncollide::ray::ray",desc:"Computes the time of impact between this transform geometry and a ray.",parent:'11172'},{ty:"method",name:"toi_and_normal_with_transform_and_ray",path:"ncollide::ray::ray",desc:"Computes the time of impact, and normal between this transformed geometry and a ray.",parent:'11172'},{ty:"method",name:"intersects_with_transform_and_ray",path:"ncollide::ray::ray",desc:"Tests whether a ray intersects this transformed geometry.",parent:'11172'},{ty:"trait",name:"RayCast",path:"ncollide::ray::ray",desc:"Traits of objects which can be tested for intersection with a ray."},{ty:"method",name:"toi_with_ray",path:"ncollide::ray::ray",desc:"Computes the time of impact between this geometry and a ray",parent:'11320'},{ty:"tymethod",name:"toi_and_normal_with_ray",path:"ncollide::ray::ray",desc:"Computes the intersection point between this geometry and a ray.",parent:'11320'},{ty:"method",name:"intersects_ray",path:"ncollide::ray::ray",desc:"Tests whether a ray intersects this geometry.",parent:'11320'},{ty:"method",name:"to_str",path:"ncollide::ray::ray",desc:"",parent:'10919'},{ty:"method",name:"encode",path:"ncollide::ray::ray",desc:"",parent:'10919'},{ty:"method",name:"decode",path:"ncollide::ray::ray",desc:"",parent:'10919'},{ty:"method",name:"new",path:"ncollide::ray::ray",desc:"Creates a new ray starting from `orig` and with the direction `dir`. `dir` must be\nnormalized.",parent:'10919'},{ty:"mod",name:"narrow",path:"ncollide",desc:"Narrow phases."},{ty:"mod",name:"toi",path:"ncollide::narrow",desc:"Functions to compule the time of impact between two geometries."},{ty:"mod",name:"collide",path:"ncollide::narrow",desc:"Functions to compute one contact point between two geometries."},{ty:"mod",name:"closest_points",path:"ncollide::narrow",desc:"Functions to compute the closest points between two geometries."},{ty:"mod",name:"collision_detector",path:"ncollide::narrow",desc:""},{ty:"trait",name:"CollisionDetector",path:"ncollide::narrow::collision_detector",desc:"Trait of the algorithms executed during the so-called Narrow Phase."},{ty:"tymethod",name:"update",path:"ncollide::narrow::collision_detector",desc:"Runs the collision detection on two objects. It is assumed that the same\ncollision detector (the same structure) is always used with the same\npair of object.",parent:'14858'},{ty:"tymethod",name:"num_colls",path:"ncollide::narrow::collision_detector",desc:"The number of collision detected during the last update.",parent:'14858'},{ty:"tymethod",name:"colls",path:"ncollide::narrow::collision_detector",desc:"Collects the collisions detected during the last update.",parent:'14858'},{ty:"tymethod",name:"toi",path:"ncollide::narrow::collision_detector",desc:"Computes the time of impact of two objects.",parent:'14858'},{ty:"mod",name:"empty",path:"ncollide::narrow",desc:""},{ty:"struct",name:"Empty",path:"ncollide::narrow::empty",desc:"An empty collision detector. It does nothing."},{ty:"method",name:"encode",path:"ncollide::narrow::empty",desc:"",parent:'14947'},{ty:"method",name:"decode",path:"ncollide::narrow::empty",desc:"",parent:'14947'},{ty:"method",name:"new",path:"ncollide::narrow::empty",desc:"Creates a new empty collision detector.",parent:'14947'},{ty:"method",name:"update",path:"ncollide::narrow::empty",desc:"",parent:'14947'},{ty:"method",name:"num_colls",path:"ncollide::narrow::empty",desc:"",parent:'14947'},{ty:"method",name:"colls",path:"ncollide::narrow::empty",desc:"",parent:'14947'},{ty:"method",name:"toi",path:"ncollide::narrow::empty",desc:"",parent:'14947'},{ty:"mod",name:"ball_ball",path:"ncollide::narrow",desc:""},{ty:"struct",name:"BallBall",path:"ncollide::narrow::ball_ball",desc:"Collision detector between two balls."},{ty:"fn",name:"collide",path:"ncollide::narrow::ball_ball",desc:"Computes the contact point between two balls."},{ty:"fn",name:"closest_points",path:"ncollide::narrow::ball_ball",desc:"Computes the closest points between two balls."},{ty:"fn",name:"toi",path:"ncollide::narrow::ball_ball",desc:"Computes the Time Of Impact of two balls."},{ty:"method",name:"encode",path:"ncollide::narrow::ball_ball",desc:"",parent:'15308'},{ty:"method",name:"decode",path:"ncollide::narrow::ball_ball",desc:"",parent:'15308'},{ty:"method",name:"clone",path:"ncollide::narrow::ball_ball",desc:"",parent:'15308'},{ty:"method",name:"new",path:"ncollide::narrow::ball_ball",desc:"Creates a new persistant collision detector between two balls.",parent:'15308'},{ty:"method",name:"update",path:"ncollide::narrow::ball_ball",desc:"",parent:'15308'},{ty:"method",name:"num_colls",path:"ncollide::narrow::ball_ball",desc:"",parent:'15308'},{ty:"method",name:"colls",path:"ncollide::narrow::ball_ball",desc:"",parent:'15308'},{ty:"method",name:"toi",path:"ncollide::narrow::ball_ball",desc:"",parent:'15308'},{ty:"mod",name:"plane_implicit",path:"ncollide::narrow",desc:""},{ty:"struct",name:"PlaneImplicit",path:"ncollide::narrow::plane_implicit",desc:"Collision detector between a plane and a geometry implementing the `Implicit` trait."},{ty:"struct",name:"ImplicitPlane",path:"ncollide::narrow::plane_implicit",desc:"Collision detector between a plane and a geometry implementing the `Implicit` trait."},{ty:"fn",name:"collide",path:"ncollide::narrow::plane_implicit",desc:"Same as `update_collide_plane_implicit_shape` but the existing collision or\n`None`."},{ty:"fn",name:"toi",path:"ncollide::narrow::plane_implicit",desc:"Computes the Time Of Impact of a geometry and a plane."},{ty:"method",name:"encode",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16122'},{ty:"method",name:"decode",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16122'},{ty:"method",name:"clone",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16122'},{ty:"method",name:"new",path:"ncollide::narrow::plane_implicit",desc:"Creates a new persistant collision detector between a plane and a geometry with a support\nmapping function.",parent:'16122'},{ty:"method",name:"update",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16122'},{ty:"method",name:"num_colls",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16122'},{ty:"method",name:"colls",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16122'},{ty:"method",name:"toi",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16122'},{ty:"method",name:"encode",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16613'},{ty:"method",name:"decode",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16613'},{ty:"method",name:"clone",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16613'},{ty:"method",name:"new",path:"ncollide::narrow::plane_implicit",desc:"Creates a new persistant collision detector between a plane and a geometry with a support\nmapping function.",parent:'16613'},{ty:"method",name:"update",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16613'},{ty:"method",name:"num_colls",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16613'},{ty:"method",name:"colls",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16613'},{ty:"method",name:"toi",path:"ncollide::narrow::plane_implicit",desc:"",parent:'16613'},{ty:"mod",name:"implicit_implicit",path:"ncollide::narrow",desc:""},{ty:"struct",name:"ImplicitImplicit",path:"ncollide::narrow::implicit_implicit",desc:"Persistent collision detector between two shapes having a support mapping function."},{ty:"fn",name:"collide",path:"ncollide::narrow::implicit_implicit",desc:"Computes a contact point between two implicit geometries."},{ty:"fn",name:"toi",path:"ncollide::narrow::implicit_implicit",desc:"Computes the Time Of Impact of two geometries."},{ty:"method",name:"encode",path:"ncollide::narrow::implicit_implicit",desc:"",parent:'17387'},{ty:"method",name:"decode",path:"ncollide::narrow::implicit_implicit",desc:"",parent:'17387'},{ty:"method",name:"clone",path:"ncollide::narrow::implicit_implicit",desc:"",parent:'17387'},{ty:"method",name:"new",path:"ncollide::narrow::implicit_implicit",desc:"Creates a new persistent collision detector between two geometries with support mapping\nfunctions.",parent:'17387'},{ty:"method",name:"update",path:"ncollide::narrow::implicit_implicit",desc:"",parent:'17387'},{ty:"method",name:"num_colls",path:"ncollide::narrow::implicit_implicit",desc:"",parent:'17387'},{ty:"method",name:"colls",path:"ncollide::narrow::implicit_implicit",desc:"",parent:'17387'},{ty:"method",name:"toi",path:"ncollide::narrow::implicit_implicit",desc:"",parent:'17387'},{ty:"mod",name:"incremental_contact_manifold_generator",path:"ncollide::narrow",desc:""},{ty:"struct",name:"IncrementalContactManifoldGenerator",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"Contact manifold generator which keeps track of several contacts."},{ty:"method",name:"encode",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18452'},{ty:"method",name:"decode",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18452'},{ty:"method",name:"clone",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18452'},{ty:"method",name:"encode",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18824'},{ty:"method",name:"decode",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18824'},{ty:"method",name:"clone",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18824'},{ty:"method",name:"new",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"Creates a new incremental contact manifold generator.",parent:'18824'},{ty:"method",name:"get_sub_collision",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"Gets a collision from the sub-detector used by this manifold generator. This does not\nupdate the manifold itself.",parent:'18824'},{ty:"method",name:"add_new_contacts",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"Updates the current manifold by adding one point.",parent:'18824'},{ty:"method",name:"update_contacts",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"Updates the contacts already existing on this manifold.",parent:'18824'},{ty:"method",name:"update",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18824'},{ty:"method",name:"num_colls",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18824'},{ty:"method",name:"colls",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18824'},{ty:"method",name:"toi",path:"ncollide::narrow::incremental_contact_manifold_generator",desc:"",parent:'18824'},{ty:"mod",name:"one_shot_contact_manifold_generator",path:"ncollide::narrow",desc:""},{ty:"struct",name:"OneShotContactManifoldGenerator",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"Contact manifold generator producing a full manifold at the first update."},{ty:"method",name:"encode",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"",parent:'20124'},{ty:"method",name:"decode",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"",parent:'20124'},{ty:"method",name:"clone",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"",parent:'20124'},{ty:"method",name:"new",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"Creates a new one shot contact manifold generator.",parent:'20124'},{ty:"method",name:"update",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"",parent:'20124'},{ty:"method",name:"num_colls",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"",parent:'20124'},{ty:"method",name:"colls",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"",parent:'20124'},{ty:"method",name:"toi",path:"ncollide::narrow::one_shot_contact_manifold_generator",desc:"",parent:'20124'},{ty:"mod",name:"concave_geom_geom",path:"ncollide::narrow",desc:""},{ty:"struct",name:"ConcaveGeomGeom",path:"ncollide::narrow::concave_geom_geom",desc:""},{ty:"struct",name:"GeomConcaveGeom",path:"ncollide::narrow::concave_geom_geom",desc:""},{ty:"struct",name:"ConcaveGeomGeomFactory",path:"ncollide::narrow::concave_geom_geom",desc:""},{ty:"struct",name:"GeomConcaveGeomFactory",path:"ncollide::narrow::concave_geom_geom",desc:""},{ty:"method",name:"new",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'20747'},{ty:"method",name:"update",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'20747'},{ty:"method",name:"num_colls",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'20747'},{ty:"method",name:"colls",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'20747'},{ty:"method",name:"new",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'21551'},{ty:"method",name:"update",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'21551'},{ty:"method",name:"num_colls",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'21551'},{ty:"method",name:"colls",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'21551'},{ty:"method",name:"build",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'21893'},{ty:"method",name:"build",path:"ncollide::narrow::concave_geom_geom",desc:"",parent:'22035'},{ty:"mod",name:"geom_geom",path:"ncollide::narrow",desc:""},{ty:"struct",name:"GeomGeomDispatcher",path:"ncollide::narrow::geom_geom",desc:""},{ty:"struct",name:"CollisionDetectorCloner",path:"ncollide::narrow::geom_geom",desc:""},{ty:"structfield",name:"template",path:"ncollide::narrow::geom_geom",desc:"",parent:'24307'},{ty:"trait",name:"GeomGeomCollisionDetector",path:"ncollide::narrow::geom_geom",desc:"Same as the `CollisionDetector` trait but using dynamic dispatch on the geometries."},{ty:"tymethod",name:"update",path:"ncollide::narrow::geom_geom",desc:"Runs the collision detection on two objects. It is assumed that the same\ncollision detector (the same structure) is always used with the same\npair of object.",parent:'22219'},{ty:"tymethod",name:"num_colls",path:"ncollide::narrow::geom_geom",desc:"The number of collision detected during the last update.",parent:'22219'},{ty:"tymethod",name:"colls",path:"ncollide::narrow::geom_geom",desc:"Collects the collisions detected during the last update.",parent:'22219'},{ty:"trait",name:"DynamicCollisionDetector",path:"ncollide::narrow::geom_geom",desc:"Trait to be implemented by collision detector using dynamic dispatch.\nThis is used to know the exact type of the geometries."},{ty:"trait",name:"CollisionDetectorFactory",path:"ncollide::narrow::geom_geom",desc:""},{ty:"tymethod",name:"build",path:"ncollide::narrow::geom_geom",desc:"",parent:'24285'},{ty:"method",name:"clone",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"update",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"num_colls",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"colls",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"toi",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"update",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"num_colls",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"colls",path:"ncollide::narrow::geom_geom",desc:"",parent:'22313'},{ty:"method",name:"new_without_default",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"register_dynamic_detector",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"register_detector",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"unregister_detector",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"dispatch",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"new",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"register_default_plane_implicit_detector",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"register_default_implicit_implicit_detector",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"register_default_concave_geom_geom_detector",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"register_detector_with_contact_manifold_generator",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"register_default_implicit_detectors",path:"ncollide::narrow::geom_geom",desc:"",parent:'22685'},{ty:"method",name:"build",path:"ncollide::narrow::geom_geom",desc:"",parent:'24307'},{ty:"mod",name:"algorithm",path:"ncollide::narrow",desc:"Algorithms needed for distance and penetration depth computation."},{ty:"mod",name:"simplex",path:"ncollide::narrow::algorithm",desc:"Abstract definition of a simplex usable by the GJK algorithm."},{ty:"trait",name:"Simplex",path:"ncollide::narrow::algorithm::simplex",desc:"Trait of a simplex usable by the GJK algorithm."},{ty:"tymethod",name:"reset",path:"ncollide::narrow::algorithm::simplex",desc:"Replace the point of the simplex by a single one. The simplex is reduced to be\n0-dimensional.",parent:'24424'},{ty:"tymethod",name:"translate_by",path:"ncollide::narrow::algorithm::simplex",desc:"Translates each point of this simplex.",parent:'24424'},{ty:"tymethod",name:"add_point",path:"ncollide::narrow::algorithm::simplex",desc:"Adds a point to the simplex.",parent:'24424'},{ty:"tymethod",name:"project_origin_and_reduce",path:"ncollide::narrow::algorithm::simplex",desc:"Project the origin on the simplex and remove any sub-simplex which does not contain the\nprojection.",parent:'24424'},{ty:"tymethod",name:"project_origin",path:"ncollide::narrow::algorithm::simplex",desc:"Projection the origin on the simplex. The simplex itself in unchanged, although it is mutable\nfor optimization purpose.",parent:'24424'},{ty:"tymethod",name:"contains_point",path:"ncollide::narrow::algorithm::simplex",desc:"Checks whether a given point is already part of the simplex points.",parent:'24424'},{ty:"tymethod",name:"dimension",path:"ncollide::narrow::algorithm::simplex",desc:"Dimension of the simplex. A simplex with `n` must be a `n - 1`-dimensional simplex.",parent:'24424'},{ty:"tymethod",name:"max_sq_len",path:"ncollide::narrow::algorithm::simplex",desc:"The maximum among the simplex point squared lengths.",parent:'24424'},{ty:"mod",name:"johnson_simplex",path:"ncollide::narrow::algorithm",desc:"Simplex using the Johnson subalgorithm to compute the projection of the origin on the simplex."},{ty:"struct",name:"JohnsonSimplex",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"Simplex using the Johnson subalgorithm to compute the projection of the origin on the simplex."},{ty:"struct",name:"RecursionTemplate",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"Set of indices to explain to the JohnsonSimplex how to do its work.\nBuilding this is very time consuming, and thus should be shared between all instances of the\nJohnson simplex."},{ty:"structfield",name:"permutation_list",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"For internal uses. Do not read.",parent:'24561'},{ty:"structfield",name:"offsets",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"For internal uses. Do not read.",parent:'24561'},{ty:"structfield",name:"sub_determinants",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"For internal uses. Do not read.",parent:'24561'},{ty:"structfield",name:"num_determinants",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"For internal uses. Do not read.",parent:'24561'},{ty:"structfield",name:"num_leaves",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"For internal uses. Do not read.",parent:'24561'},{ty:"method",name:"clone",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"eq",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24561'},{ty:"method",name:"ne",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24561'},{ty:"method",name:"clone",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24561'},{ty:"method",name:"encode",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24561'},{ty:"method",name:"decode",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24561'},{ty:"method",name:"new",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"Creates a new set o Recursion simplex sharable between any Johnson simplex having a\ndimension inferior or equal to `dim`.",parent:'24561'},{ty:"method",name:"new",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"Creates a new, empty, johnson simplex.",parent:'24492'},{ty:"method",name:"new_w_tls",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"Creates a new, empty johnson simplex. The recursion template uses the thread-local one.",parent:'24492'},{ty:"method",name:"reset",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"dimension",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"max_sq_len",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"contains_point",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"add_point",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"project_origin_and_reduce",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"project_origin",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"translate_by",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24492'},{ty:"method",name:"to_str",path:"ncollide::narrow::algorithm::johnson_simplex",desc:"",parent:'24561'},{ty:"mod",name:"gjk",path:"ncollide::narrow::algorithm",desc:"The Gilbertâ€“Johnsonâ€“Keerthi distance algorithm."},{ty:"enum",name:"GJKResult",path:"ncollide::narrow::algorithm::gjk",desc:"Results of the GJK algorithm."},{ty:"variant",name:"Intersection",path:"ncollide::narrow::algorithm::gjk",desc:"Result of the GJK algorithm when the origin is inside of the polytope.",parent:'27989'},{ty:"variant",name:"Projection",path:"ncollide::narrow::algorithm::gjk",desc:"Result of the GJK algorithm when a projection of the origin on the polytope is found.",parent:'27989'},{ty:"variant",name:"NoIntersection",path:"ncollide::narrow::algorithm::gjk",desc:"Result of the GJK algorithm when the origin is to far away from the polytope.",parent:'27989'},{ty:"fn",name:"closest_points",path:"ncollide::narrow::algorithm::gjk",desc:"Computes the closest points between two convex geometries unsing the GJK algorithm."},{ty:"fn",name:"closest_points_without_margin",path:"ncollide::narrow::algorithm::gjk",desc:"Computes the closest points between two convex geometries without their margins unsing the GJK\nalgorithm."},{ty:"fn",name:"closest_points_without_margin_with_max_dist",path:"ncollide::narrow::algorithm::gjk",desc:"Computes the closest points between two convex geometries without their margins unsing the GJK\nalgorithm."},{ty:"fn",name:"project_origin",path:"ncollide::narrow::algorithm::gjk",desc:"Projects the origin on a geometry unsing the GJK algorithm."},{ty:"fn",name:"project_origin_with_max_dist",path:"ncollide::narrow::algorithm::gjk",desc:"Projects the origin on a geometry unsing the Separating Axis GJK algorithm.\nThe algorithm will stop as soon as the polytope can be proven to be at least `max_dist` away\nfrom the origin."},{ty:"method",name:"encode",path:"ncollide::narrow::algorithm::gjk",desc:"",parent:'27989'},{ty:"method",name:"decode",path:"ncollide::narrow::algorithm::gjk",desc:"",parent:'27989'},{ty:"method",name:"clone",path:"ncollide::narrow::algorithm::gjk",desc:"",parent:'27989'},{ty:"mod",name:"minkowski_sampling",path:"ncollide::narrow::algorithm",desc:"Penetration depth computation algorithm approximating the Minkowskis sum."},{ty:"fn",name:"closest_points",path:"ncollide::narrow::algorithm::minkowski_sampling",desc:"Computes the closest points between two implicit inter-penetrating shapes. Returns None if the\nshapes are not in penetration. This can be used as a fallback algorithm for the GJK algorithm."},{ty:"trait",name:"PreferedSamplingDirections",path:"ncollide::narrow::algorithm::minkowski_sampling",desc:"Trait of geometries having prefered sampling directions for the Minkowski sampling algorithm.\nThose directions are usually the geometry faces normals."},{ty:"tymethod",name:"sample",path:"ncollide::narrow::algorithm::minkowski_sampling",desc:"Applies a function to this geometry with a given transform.",parent:'29144'},{ty:"mod",name:"broad",path:"ncollide",desc:"Broad phases."},{ty:"mod",name:"broad_phase",path:"ncollide::broad",desc:""},{ty:"trait",name:"BroadPhase",path:"ncollide::broad::broad_phase",desc:"Trait all broad phase must implement."},{ty:"tymethod",name:"add",path:"ncollide::broad::broad_phase",desc:"Adds an element to this broad phase.",parent:'29585'},{ty:"tymethod",name:"remove",path:"ncollide::broad::broad_phase",desc:"Removes an element from this broad phase.",parent:'29585'},{ty:"tymethod",name:"update",path:"ncollide::broad::broad_phase",desc:"Updates the collision pairs based on the objects bounding volumes.",parent:'29585'},{ty:"tymethod",name:"update_object",path:"ncollide::broad::broad_phase",desc:"Updates the collision pairs involving one specific object.",parent:'29585'},{ty:"trait",name:"InterferencesBroadPhase",path:"ncollide::broad::broad_phase",desc:"Broad phase which check for pairwise interferences."},{ty:"tymethod",name:"activate",path:"ncollide::broad::broad_phase",desc:"Marks and object as active.",parent:'29610'},{ty:"tymethod",name:"deactivate",path:"ncollide::broad::broad_phase",desc:"Marks and object as inactive.",parent:'29610'},{ty:"tymethod",name:"for_each_pair",path:"ncollide::broad::broad_phase",desc:"Execute a function on each interefence detected by the broad phase.",parent:'29610'},{ty:"tymethod",name:"for_each_pair_mut",path:"ncollide::broad::broad_phase",desc:"Execute a function on each interefence detected by the broad phase.",parent:'29610'},{ty:"trait",name:"BoundingVolumeBroadPhase",path:"ncollide::broad::broad_phase",desc:"Trait of broad phases working with bounding volume."},{ty:"tymethod",name:"interferences_with_bounding_volume",path:"ncollide::broad::broad_phase",desc:"Collects every object which might intersect a given bounding volume.",parent:'29691'},{ty:"trait",name:"RayCastBroadPhase",path:"ncollide::broad::broad_phase",desc:"Traits of broad phase able to run fast ray-cast queries."},{ty:"tymethod",name:"interferences_with_ray",path:"ncollide::broad::broad_phase",desc:"Collects every object which might intersect a ray.",parent:'29712'},{ty:"mod",name:"dispatcher",path:"ncollide::broad",desc:""},{ty:"struct",name:"NoIdDispatcher",path:"ncollide::broad::dispatcher",desc:"Dispatcher which disallows dispatches between identical pointers. It has no result."},{ty:"trait",name:"Dispatcher",path:"ncollide::broad::dispatcher",desc:"Trait of dispatcher. AÂ (collision) dispatcher typically takes two bodies in parameter and\nreturn the corresponding narrow phase algorithm."},{ty:"tymethod",name:"dispatch",path:"ncollide::broad::dispatcher",desc:"Deduce the narrow phase from two bodies.",parent:'29738'},{ty:"tymethod",name:"is_valid",path:"ncollide::broad::dispatcher",desc:"Tells whether a collision between two bodies can occur.",parent:'29738'},{ty:"method",name:"dispatch",path:"ncollide::broad::dispatcher",desc:"",parent:'29768'},{ty:"method",name:"is_valid",path:"ncollide::broad::dispatcher",desc:"",parent:'29768'},{ty:"mod",name:"brute_force_broad_phase",path:"ncollide::broad",desc:""},{ty:"struct",name:"BruteForceBroadPhase",path:"ncollide::broad::brute_force_broad_phase",desc:"The broad phase which does nothing."},{ty:"method",name:"new",path:"ncollide::broad::brute_force_broad_phase",desc:"Builds a new brute force broad phase.",parent:'29826'},{ty:"method",name:"pairs",path:"ncollide::broad::brute_force_broad_phase",desc:"The pair manager of this broad phase.",parent:'29826'},{ty:"method",name:"add",path:"ncollide::broad::brute_force_broad_phase",desc:"Adds an element to this broad phase.",parent:'29826'},{ty:"method",name:"remove",path:"ncollide::broad::brute_force_broad_phase",desc:"Removes an element from this broad phase.",parent:'29826'},{ty:"mod",name:"brute_force_bounding_volume_broad_phase",path:"ncollide::broad",desc:""},{ty:"struct",name:"BruteForceBoundingVolumeBroadPhase",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"Broad phase with quadratic complexity but sped up using loose bounding volumes."},{ty:"method",name:"new",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"Creates a new bounding volume based brute force broad phase.",parent:'30111'},{ty:"method",name:"num_interferences",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"Number of interferences detected by this broad phase.",parent:'30111'},{ty:"method",name:"pairs",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"The pair manager of this broad phase.",parent:'30111'},{ty:"method",name:"pairs_mut",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"The pair manager of this broad phase.",parent:'30111'},{ty:"method",name:"add",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"Adds an element to this broad phase.",parent:'30111'},{ty:"method",name:"remove",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"Removes an element from this broad phase.",parent:'30111'},{ty:"method",name:"set_active",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"Marks and object as active or inactive. The bounding volume of an inactive object is never\nupdated. Activating/deactivating an already active/inactive objecs leads to undefined\nbehaviour.",parent:'30111'},{ty:"method",name:"update",path:"ncollide::broad::brute_force_bounding_volume_broad_phase",desc:"Updates the collision pairs based on the objects bounding volumes.",parent:'30111'},{ty:"mod",name:"dbvt_broad_phase",path:"ncollide::broad",desc:""},{ty:"struct",name:"DBVTBroadPhase",path:"ncollide::broad::dbvt_broad_phase",desc:"Broad phase based on a Dynamic Bounding Volume Tree. It uses two separate trees: one for static\nobjects and which is never updated, and one for moving objects."},{ty:"method",name:"new",path:"ncollide::broad::dbvt_broad_phase",desc:"Creates a new broad phase based on a Dynamic Bounding Volume Tree.",parent:'30864'},{ty:"method",name:"num_interferences",path:"ncollide::broad::dbvt_broad_phase",desc:"Number of interferences detected by this broad phase.",parent:'30864'},{ty:"method",name:"add",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"remove",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"update",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"update_object",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"for_each_pair",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"for_each_pair_mut",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"activate",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"deactivate",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"interferences_with_bounding_volume",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"method",name:"interferences_with_ray",path:"ncollide::broad::dbvt_broad_phase",desc:"",parent:'30864'},{ty:"mod",name:"contact",path:"ncollide",desc:"Main data structure for contacts."},{ty:"struct",name:"Contact",path:"ncollide::contact",desc:"Geometric description of a contact."},{ty:"structfield",name:"world1",path:"ncollide::contact",desc:"Position of the contact on the first object. The position is expressed in world space.",parent:'32667'},{ty:"structfield",name:"world2",path:"ncollide::contact",desc:"Position of the contact on the second object. The position is expressed in world space.",parent:'32667'},{ty:"structfield",name:"normal",path:"ncollide::contact",desc:"Contact normal",parent:'32667'},{ty:"structfield",name:"depth",path:"ncollide::contact",desc:"Penetration depth",parent:'32667'},{ty:"method",name:"to_str",path:"ncollide::contact",desc:"",parent:'32667'},{ty:"method",name:"eq",path:"ncollide::contact",desc:"",parent:'32667'},{ty:"method",name:"ne",path:"ncollide::contact",desc:"",parent:'32667'},{ty:"method",name:"clone",path:"ncollide::contact",desc:"",parent:'32667'},{ty:"method",name:"deep_clone",path:"ncollide::contact",desc:"",parent:'32667'},{ty:"method",name:"encode",path:"ncollide::contact",desc:"",parent:'32667'},{ty:"method",name:"decode",path:"ncollide::contact",desc:"",parent:'32667'},{ty:"method",name:"new",path:"ncollide::contact",desc:"Creates a new contact.",parent:'32667'},{ty:"method",name:"flip",path:"ncollide::contact",desc:"Reverts the contact normal and swaps `world1` and `world2`.",parent:'32667'},{ty:"mod",name:"volumetric",path:"ncollide",desc:""},{ty:"mod",name:"volumetric",path:"ncollide::volumetric",desc:""},{ty:"trait",name:"InertiaTensor",path:"ncollide::volumetric::volumetric",desc:""},{ty:"tymethod",name:"apply",path:"ncollide::volumetric::volumetric",desc:"",parent:'33335'},{ty:"tymethod",name:"to_world_space",path:"ncollide::volumetric::volumetric",desc:"",parent:'33335'},{ty:"tymethod",name:"to_relative_wrt_point",path:"ncollide::volumetric::volumetric",desc:"",parent:'33335'},{ty:"trait",name:"Volumetric",path:"ncollide::volumetric::volumetric",desc:""},{ty:"tymethod",name:"mass_properties",path:"ncollide::volumetric::volumetric",desc:"",parent:'33369'},{ty:"mod",name:"volumetric_ball",path:"ncollide::volumetric",desc:""},{ty:"fn",name:"ball_volume",path:"ncollide::volumetric::volumetric_ball",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_ball",desc:"",parent:'2525'},{ty:"mod",name:"volumetric_cylinder",path:"ncollide::volumetric",desc:""},{ty:"fn",name:"cylinder_volume",path:"ncollide::volumetric::volumetric_cylinder",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_cylinder",desc:"",parent:'4880'},{ty:"mod",name:"volumetric_box",path:"ncollide::volumetric",desc:""},{ty:"fn",name:"box_volume",path:"ncollide::volumetric::volumetric_box",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_box",desc:"",parent:'3211'},{ty:"mod",name:"volumetric_cone",path:"ncollide::volumetric",desc:""},{ty:"fn",name:"cone_volume",path:"ncollide::volumetric::volumetric_cone",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_cone",desc:"",parent:'4301'},{ty:"mod",name:"volumetric_capsule",path:"ncollide::volumetric",desc:""},{ty:"fn",name:"capsule_volume",path:"ncollide::volumetric::volumetric_capsule",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_capsule",desc:"",parent:'3756'},{ty:"mod",name:"volumetric_compound",path:"ncollide::volumetric",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_compound",desc:"",parent:'7729'},{ty:"mod",name:"volumetric_convex",path:"ncollide::volumetric",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_convex",desc:"",parent:'5459'},{ty:"mod",name:"volumetric_plane",path:"ncollide::volumetric",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_plane",desc:"",parent:'2833'},{ty:"mod",name:"volumetric_mesh",path:"ncollide::volumetric",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_mesh",desc:"",parent:'9766'},{ty:"mod",name:"volumetric_triangle",path:"ncollide::volumetric",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_triangle",desc:"",parent:'8933'},{ty:"mod",name:"volumetric_segment",path:"ncollide::volumetric",desc:""},{ty:"method",name:"mass_properties",path:"ncollide::volumetric::volumetric_segment",desc:"",parent:'8358'},{ty:"mod",name:"implicit",path:"ncollide",desc:""},{ty:"mod",name:"implicit",path:"ncollide::implicit",desc:"\nTraits for support mapping based geometries.\n"},{ty:"trait",name:"HasMargin",path:"ncollide::implicit::implicit",desc:"Trait of geometries having a margin."},{ty:"tymethod",name:"margin",path:"ncollide::implicit::implicit",desc:"The geometry margin.",parent:'35673'},{ty:"trait",name:"Implicit",path:"ncollide::implicit::implicit",desc:"Traits of convex geometries representable by a support mapping function."},{ty:"method",name:"support_point",path:"ncollide::implicit::implicit",desc:"Evaluates the support function of the object. A support function is a\nfunction associating a vector to the geometry point which maximizes their\ndot product.\n \n# Arguments:\n * `dir` - the input of the support function. It is not required for it to\n           be normalized.",parent:'35698'},{ty:"tymethod",name:"support_point_without_margin",path:"ncollide::implicit::implicit",desc:"Evaluates the support function of the object. A support function is a\nfunction associating a vector to the geometry point which maximizes their\ndot product. This does not include the `margin` of the object. Margins are\ngeometry-dependent. Use `support_point` to sample the complete geometry.\n \n# Arguments:\n * `dir` - the input of the support function. It is not required for it to\n           be normalized.",parent:'35698'},{ty:"mod",name:"implicit_box",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_box",desc:"",parent:'3211'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_box",desc:"",parent:'3211'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_box",desc:"",parent:'3211'},{ty:"mod",name:"implicit_ball",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_ball",desc:"",parent:'2525'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_ball",desc:"",parent:'2525'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_ball",desc:"",parent:'2525'},{ty:"mod",name:"implicit_capsule",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_capsule",desc:"",parent:'3756'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_capsule",desc:"",parent:'3756'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_capsule",desc:"",parent:'3756'},{ty:"mod",name:"implicit_cone",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_cone",desc:"",parent:'4301'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_cone",desc:"",parent:'4301'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_cone",desc:"",parent:'4301'},{ty:"mod",name:"implicit_cylinder",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_cylinder",desc:"",parent:'4880'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_cylinder",desc:"",parent:'4880'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_cylinder",desc:"",parent:'4880'},{ty:"mod",name:"implicit_convex",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_convex",desc:"",parent:'5459'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_convex",desc:"",parent:'5459'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_convex",desc:"",parent:'5459'},{ty:"mod",name:"implicit_reflection",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_reflection",desc:"",parent:'7507'},{ty:"method",name:"support_point",path:"ncollide::implicit::implicit_reflection",desc:"",parent:'7507'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_reflection",desc:"",parent:'7507'},{ty:"mod",name:"implicit_triangle",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_triangle",desc:"",parent:'8933'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_triangle",desc:"",parent:'8933'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_triangle",desc:"",parent:'8933'},{ty:"mod",name:"implicit_segment",path:"ncollide::implicit",desc:""},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_segment",desc:"",parent:'8358'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_segment",desc:"",parent:'8358'},{ty:"method",name:"sample",path:"ncollide::implicit::implicit_segment",desc:"",parent:'8358'},{ty:"mod",name:"implicit_minkowski_sum",path:"ncollide::implicit",desc:""},{ty:"fn",name:"cso_support_point",path:"ncollide::implicit::implicit_minkowski_sum",desc:"Computes the support point of a CSO on a given direction.\nThe result is a support point with informations about how it has been constructed."},{ty:"fn",name:"cso_support_point_without_margin",path:"ncollide::implicit::implicit_minkowski_sum",desc:"Computes the support point of a CSO on a given direction.\nThe result is a support point with informations about how it has been constructed."},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"support_point",path:"ncollide::implicit::implicit_minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_minkowski_sum",desc:"",parent:'5648'},{ty:"method",name:"margin",path:"ncollide::implicit::implicit_minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"support_point",path:"ncollide::implicit::implicit_minkowski_sum",desc:"",parent:'6070'},{ty:"method",name:"support_point_without_margin",path:"ncollide::implicit::implicit_minkowski_sum",desc:"",parent:'6070'},{ty:"mod",name:"partitioning",path:"ncollide",desc:"Spatial partitioning tools."},{ty:"mod",name:"dbvt",path:"ncollide::partitioning",desc:"A Dynamic Bounding Volume Tree."},{ty:"struct",name:"DBVT",path:"ncollide::partitioning::dbvt",desc:"A Dynamic Bounding Volume Tree."},{ty:"struct",name:"DBVTLeaf",path:"ncollide::partitioning::dbvt",desc:"Leaf of a DBV Tree."},{ty:"structfield",name:"bounding_volume",path:"ncollide::partitioning::dbvt",desc:"The bounding volume of this node.",parent:'38703'},{ty:"structfield",name:"center",path:"ncollide::partitioning::dbvt",desc:"The center of this node bounding volume.",parent:'38703'},{ty:"structfield",name:"object",path:"ncollide::partitioning::dbvt",desc:"An user-defined object.",parent:'38703'},{ty:"structfield",name:"parent",path:"ncollide::partitioning::dbvt",desc:"This node parent.",parent:'38703'},{ty:"method",name:"encode",path:"ncollide::partitioning::dbvt",desc:"",parent:'38067'},{ty:"method",name:"decode",path:"ncollide::partitioning::dbvt",desc:"",parent:'38067'},{ty:"method",name:"new",path:"ncollide::partitioning::dbvt",desc:"Creates a new Dynamic Bounding Volume Tree.",parent:'38237'},{ty:"method",name:"remove",path:"ncollide::partitioning::dbvt",desc:"Removes a leaf from the tree. Fails if the tree is empty.",parent:'38237'},{ty:"method",name:"insert",path:"ncollide::partitioning::dbvt",desc:"Inserts a leaf to the tree.",parent:'38237'},{ty:"method",name:"visit",path:"ncollide::partitioning::dbvt",desc:"Visit this tree usingâ€¦ a visitor!",parent:'38237'},{ty:"method",name:"interferences_with_leaf",path:"ncollide::partitioning::dbvt",desc:"Finds all leaves which have their bounding boxes intersecting a specific leave's bounding\nvolume.",parent:'38237'},{ty:"method",name:"interferences_with_tree",path:"ncollide::partitioning::dbvt",desc:"Finds all interferences between this tree and another one.",parent:'38237'},{ty:"method",name:"new",path:"ncollide::partitioning::dbvt",desc:"Creates a new leaf.",parent:'38703'},{ty:"mod",name:"bvt",path:"ncollide::partitioning",desc:"A read-only Bounding Volume Tree."},{ty:"struct",name:"BVT",path:"ncollide::partitioning::bvt",desc:"AÂ Boundig Volume Tree."},{ty:"fn",name:"kdtree_partitioner",path:"ncollide::partitioning::bvt",desc:"Construction function for quadtree in 2d, an octree in 4d, and a 2^n tree in n-d."},{ty:"method",name:"clone",path:"ncollide::partitioning::bvt",desc:"",parent:'39853'},{ty:"method",name:"encode",path:"ncollide::partitioning::bvt",desc:"",parent:'39853'},{ty:"method",name:"decode",path:"ncollide::partitioning::bvt",desc:"",parent:'39853'},{ty:"method",name:"clone",path:"ncollide::partitioning::bvt",desc:"",parent:'40028'},{ty:"method",name:"encode",path:"ncollide::partitioning::bvt",desc:"",parent:'40028'},{ty:"method",name:"decode",path:"ncollide::partitioning::bvt",desc:"",parent:'40028'},{ty:"method",name:"new_with_partitioner",path:"ncollide::partitioning::bvt",desc:"Builds a bounding volume tree using an user-defined construction function.",parent:'39853'},{ty:"method",name:"visit",path:"ncollide::partitioning::bvt",desc:"Visit this tree usingâ€¦ a visitor!",parent:'39853'},{ty:"method",name:"visit_mut",path:"ncollide::partitioning::bvt",desc:"Visit this tree usingâ€¦ a visitor! Visitor arguments are mutable.",parent:'39853'},{ty:"method",name:"root_bounding_volume",path:"ncollide::partitioning::bvt",desc:"Reference to the bounding volume of the tree root.",parent:'39853'},{ty:"mod",name:"bvt_visitor",path:"ncollide::partitioning",desc:"Trait of visitors of bounding volume based tree."},{ty:"struct",name:"RayInterferencesCollector",path:"ncollide::partitioning::bvt_visitor",desc:"Bounding Volume Tree visitor collecting interferences with a given ray."},{ty:"struct",name:"BoundingVolumeInterferencesCollector",path:"ncollide::partitioning::bvt_visitor",desc:"Bounding Volume Tree visitor collecting interferences with a given bounding volume."},{ty:"trait",name:"BVTVisitor",path:"ncollide::partitioning::bvt_visitor",desc:"Visitor of Bounding Volume Trees."},{ty:"tymethod",name:"visit_internal",path:"ncollide::partitioning::bvt_visitor",desc:"Visits an internal node. Returns `true` if the internal node children have to be visited\ntoo.",parent:'41230'},{ty:"tymethod",name:"visit_leaf",path:"ncollide::partitioning::bvt_visitor",desc:"Visits a leaf.",parent:'41230'},{ty:"method",name:"visit_internal_mut",path:"ncollide::partitioning::bvt_visitor",desc:"Visits an internal node. Returns `true` if the internal node children have to be visited\ntoo.",parent:'41230'},{ty:"method",name:"visit_leaf_mut",path:"ncollide::partitioning::bvt_visitor",desc:"Visits a leaf.",parent:'41230'},{ty:"method",name:"new",path:"ncollide::partitioning::bvt_visitor",desc:"Creates a new `RayInterferencesCollector`.",parent:'41286'},{ty:"method",name:"visit_internal",path:"ncollide::partitioning::bvt_visitor",desc:"",parent:'41286'},{ty:"method",name:"visit_leaf",path:"ncollide::partitioning::bvt_visitor",desc:"",parent:'41286'},{ty:"method",name:"new",path:"ncollide::partitioning::bvt_visitor",desc:"Creates a new `BoundingVolumeInterferencesCollector`.",parent:'41414'},{ty:"method",name:"visit_internal",path:"ncollide::partitioning::bvt_visitor",desc:"",parent:'41414'},{ty:"method",name:"visit_leaf",path:"ncollide::partitioning::bvt_visitor",desc:"",parent:'41414'},{ty:"mod",name:"util",path:"ncollide",desc:"Data structure utilities."},{ty:"mod",name:"pair",path:"ncollide::util",desc:"Pair of managed boxes."},{ty:"struct",name:"Pair",path:"ncollide::util::pair",desc:"Pair of managed boxes. It is accompagned with a fast hash function."},{ty:"structfield",name:"first",path:"ncollide::util::pair",desc:"first object of the pair",parent:'41546'},{ty:"structfield",name:"second",path:"ncollide::util::pair",desc:"second object of the pair",parent:'41546'},{ty:"struct",name:"PairTWHash",path:"ncollide::util::pair",desc:"Tomas Wang based hash function for a `Pair` object."},{ty:"method",name:"encode",path:"ncollide::util::pair",desc:"",parent:'41546'},{ty:"method",name:"decode",path:"ncollide::util::pair",desc:"",parent:'41546'},{ty:"method",name:"clone",path:"ncollide::util::pair",desc:"",parent:'41546'},{ty:"method",name:"new",path:"ncollide::util::pair",desc:"Builds a new pair of managed boxes.",parent:'41546'},{ty:"method",name:"eq",path:"ncollide::util::pair",desc:"",parent:'41546'},{ty:"method",name:"encode",path:"ncollide::util::pair",desc:"",parent:'41884'},{ty:"method",name:"decode",path:"ncollide::util::pair",desc:"",parent:'41884'},{ty:"method",name:"new",path:"ncollide::util::pair",desc:"Creates a new PairTWHash",parent:'41884'},{ty:"method",name:"hash",path:"ncollide::util::pair",desc:"",parent:'41884'},{ty:"mod",name:"hash",path:"ncollide::util",desc:"Trait for hash functions."},{ty:"struct",name:"StdHash",path:"ncollide::util::hash",desc:"Hash function for everything implementing the `Hash` trait."},{ty:"struct",name:"UintPairTWHash",path:"ncollide::util::hash",desc:"Hash function for pairs of uint, using the Tomas Wang hash."},{ty:"struct",name:"UintTWHash",path:"ncollide::util::hash",desc:"Hash function for uint."},{ty:"fn",name:"key_from_pair",path:"ncollide::util::hash",desc:"Combines two uint on a sigle one."},{ty:"fn",name:"tomas_wang_hash",path:"ncollide::util::hash",desc:"Tomas Wang integer hash function."},{ty:"trait",name:"HashFun",path:"ncollide::util::hash",desc:"Hash function."},{ty:"tymethod",name:"hash",path:"ncollide::util::hash",desc:"Hash function.",parent:'42044'},{ty:"method",name:"clone",path:"ncollide::util::hash",desc:"",parent:'42054'},{ty:"method",name:"encode",path:"ncollide::util::hash",desc:"",parent:'42054'},{ty:"method",name:"decode",path:"ncollide::util::hash",desc:"",parent:'42054'},{ty:"method",name:"new",path:"ncollide::util::hash",desc:"Creates a new StdHash.",parent:'42054'},{ty:"method",name:"hash",path:"ncollide::util::hash",desc:"",parent:'42054'},{ty:"method",name:"clone",path:"ncollide::util::hash",desc:"",parent:'42215'},{ty:"method",name:"encode",path:"ncollide::util::hash",desc:"",parent:'42215'},{ty:"method",name:"decode",path:"ncollide::util::hash",desc:"",parent:'42215'},{ty:"method",name:"new",path:"ncollide::util::hash",desc:"Creates a new UintPairTWHash.",parent:'42215'},{ty:"method",name:"hash",path:"ncollide::util::hash",desc:"",parent:'42215'},{ty:"method",name:"clone",path:"ncollide::util::hash",desc:"",parent:'42409'},{ty:"method",name:"encode",path:"ncollide::util::hash",desc:"",parent:'42409'},{ty:"method",name:"decode",path:"ncollide::util::hash",desc:"",parent:'42409'},{ty:"method",name:"new",path:"ncollide::util::hash",desc:"Creates a new UintTWHash.",parent:'42409'},{ty:"method",name:"hash",path:"ncollide::util::hash",desc:"",parent:'42409'},{ty:"mod",name:"hash_map",path:"ncollide::util",desc:"An hash map with a customizable hash function."},{ty:"struct",name:"Entry",path:"ncollide::util::hash_map",desc:"Entry of an `HashMap`."},{ty:"structfield",name:"key",path:"ncollide::util::hash_map",desc:"The key of the entry.",parent:'42705'},{ty:"structfield",name:"value",path:"ncollide::util::hash_map",desc:"The value of the entry.",parent:'42705'},{ty:"struct",name:"HashMap",path:"ncollide::util::hash_map",desc:"Alternative implementation of `HashMap`."},{ty:"method",name:"clone",path:"ncollide::util::hash_map",desc:"",parent:'42705'},{ty:"method",name:"encode",path:"ncollide::util::hash_map",desc:"",parent:'42705'},{ty:"method",name:"decode",path:"ncollide::util::hash_map",desc:"",parent:'42705'},{ty:"method",name:"clone",path:"ncollide::util::hash_map",desc:"",parent:'42945'},{ty:"method",name:"encode",path:"ncollide::util::hash_map",desc:"",parent:'42945'},{ty:"method",name:"decode",path:"ncollide::util::hash_map",desc:"",parent:'42945'},{ty:"method",name:"new",path:"ncollide::util::hash_map",desc:"Creates a new hash map.",parent:'42945'},{ty:"method",name:"new_with_capacity",path:"ncollide::util::hash_map",desc:"Creates a new hash map with a given capacity.",parent:'42945'},{ty:"method",name:"elements",path:"ncollide::util::hash_map",desc:"The elements added to this hash map.",parent:'42945'},{ty:"method",name:"elements_mut",path:"ncollide::util::hash_map",desc:"The elements added to this hash map.",parent:'42945'},{ty:"method",name:"remove_elem_at",path:"ncollide::util::hash_map",desc:"Removes the element at the specified position of the element array.",parent:'42945'},{ty:"method",name:"get_and_remove",path:"ncollide::util::hash_map",desc:"Removes an element and returns its value if it existed.",parent:'42945'},{ty:"method",name:"find_or_insert_lazy",path:"ncollide::util::hash_map",desc:"Same as `self.insert_or_replace(key, value, false)` but with `value` a function which is\ncalled iff. the value does not exist yet.",parent:'42945'},{ty:"method",name:"insert_or_replace",path:"ncollide::util::hash_map",desc:"Inserts or replace an element.",parent:'42945'},{ty:"method",name:"len",path:"ncollide::util::hash_map",desc:"",parent:'42945'},{ty:"method",name:"clear",path:"ncollide::util::hash_map",desc:"",parent:'42945'},{ty:"method",name:"contains_key",path:"ncollide::util::hash_map",desc:"",parent:'42945'},{ty:"method",name:"find",path:"ncollide::util::hash_map",desc:"",parent:'42945'},{ty:"method",name:"insert",path:"ncollide::util::hash_map",desc:"Inserts an element on the hash map.",parent:'42945'},{ty:"method",name:"remove",path:"ncollide::util::hash_map",desc:"Remove an element from the hash map.",parent:'42945'},{ty:"method",name:"find_mut",path:"ncollide::util::hash_map",desc:"Gets a mutable reference to an element of the hashmap.",parent:'42945'},{ty:"mod",name:"owned_allocation_cache",path:"ncollide::util",desc:"Allocation cache for owned objects."},{ty:"struct",name:"OwnedAllocationCache",path:"ncollide::util::owned_allocation_cache",desc:"Cache for owned objects."},{ty:"method",name:"new",path:"ncollide::util::owned_allocation_cache",desc:"Initializes the cache.",parent:'44904'},{ty:"method",name:"alloc",path:"ncollide::util::owned_allocation_cache",desc:"Box a value into a potentially already allocated box.",parent:'44904'},{ty:"method",name:"retain",path:"ncollide::util::owned_allocation_cache",desc:"Retains a box which can be re-used by the `box` method.",parent:'44904'},{ty:"method",name:"clear",path:"ncollide::util::owned_allocation_cache",desc:"Clears the cache, destroying any stored pointer.",parent:'44904'},{ty:"mod",name:"aliases",path:"ncollide",desc:"Aliases\nAliases"},{ty:"mod",name:"dim4",path:"ncollide::aliases",desc:""},{ty:"typedef",name:"Ball4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Box4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Cylinder4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Cone4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Plane4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Compound4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Triangle4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Segment4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"TriangleMesh4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"LineStrip4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Geom4dRef",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"Geom4d",path:"ncollide::aliases::dim4",desc:""},{ty:"typedef",name:"AABB4d",path:"ncollide::aliases::dim4",desc:""},{ty:"mod",name:"dim3",path:"ncollide::aliases",desc:""},{ty:"typedef",name:"Ball3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Box3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Cylinder3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Cone3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Plane3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Compound3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Triangle3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Segment3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"TriangleMesh3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"LineStrip3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Geom3dRef",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"Geom3d",path:"ncollide::aliases::dim3",desc:""},{ty:"typedef",name:"AABB3d",path:"ncollide::aliases::dim3",desc:""},{ty:"mod",name:"dim2",path:"ncollide::aliases",desc:""},{ty:"typedef",name:"Ball2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Box2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Cylinder2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Cone2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Plane2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Compound2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Triangle2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Segment2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"TriangleMesh2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"LineStrip2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Geom2dRef",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"Geom2d",path:"ncollide::aliases::dim2",desc:""},{ty:"typedef",name:"AABB2d",path:"ncollide::aliases::dim2",desc:""}];var allPaths = {'45598':{type:'typedef',name:'AABB2d'},'14821':{type:'mod',name:'narrow'},'14943':{type:'mod',name:'empty'},'42699':{type:'mod',name:'hash_map'},'35673':{type:'trait',name:'HasMargin'},'45186':{type:'typedef',name:'AABB4d'},'45466':{type:'typedef',name:'Plane2d'},'45476':{type:'typedef',name:'Compound2d'},'14852':{type:'mod',name:'closest_points'},'29691':{type:'trait',name:'BoundingVolumeBroadPhase'},'4877':{type:'mod',name:'cylinder'},'33323':{type:'mod',name:'volumetric'},'45102':{type:'typedef',name:'TriangleMesh4d'},'14858':{type:'trait',name:'CollisionDetector'},'14947':{type:'struct',name:'Empty'},'21551':{type:'struct',name:'GeomConcaveGeom'},'15308':{type:'struct',name:'BallBall'},'16122':{type:'struct',name:'PlaneImplicit'},'41222':{type:'mod',name:'bvt_visitor'},'2523':{type:'mod',name:'ball'},'39853':{type:'struct',name:'BVT'},'5459':{type:'struct',name:'Convex'},'5648':{type:'struct',name:'MinkowskiSum'},'45558':{type:'typedef',name:'Geom2dRef'},'45260':{type:'typedef',name:'Plane3d'},'45196':{type:'mod',name:'dim3'},'2833':{type:'struct',name:'Plane'},'16107':{type:'mod',name:'plane_implicit'},'35546':{type:'mod',name:'volumetric_triangle'},'36838':{type:'mod',name:'implicit_convex'},'24420':{type:'mod',name:'algorithm'},'1410':{type:'mod',name:'bounding_volume'},'41884':{type:'struct',name:'PairTWHash'},'29819':{type:'mod',name:'brute_force_broad_phase'},'45032':{type:'typedef',name:'Box4d'},'53':{type:'struct',name:'AABB'},'16613':{type:'struct',name:'ImplicitPlane'},'45438':{type:'typedef',name:'Ball2d'},'30864':{type:'struct',name:'DBVTBroadPhase'},'33646':{type:'mod',name:'volumetric_ball'},'45064':{type:'typedef',name:'Compound4d'},'24285':{type:'trait',name:'CollisionDetectorFactory'},'11320':{type:'trait',name:'RayCast'},'28466':{type:'fn',name:'closest_points_without_margin'},'1450':{type:'trait',name:'LooseBoundingVolume'},'35669':{type:'mod',name:'implicit'},'20747':{type:'struct',name:'ConcaveGeomGeom'},'1555':{type:'mod',name:'aabb_cone'},'33921':{type:'fn',name:'cylinder_volume'},'20124':{type:'struct',name:'OneShotContactManifoldGenerator'},'38703':{type:'struct',name:'DBVTLeaf'},'8351':{type:'mod',name:'segment'},'35613':{type:'mod',name:'volumetric_segment'},'37':{type:'trait',name:'HasAABB'},'1741':{type:'mod',name:'aabb_capsule'},'3756':{type:'struct',name:'Capsule'},'45536':{type:'typedef',name:'LineStrip2d'},'5601':{type:'mod',name:'minkowski_sum'},'29768':{type:'struct',name:'NoIdDispatcher'},'42705':{type:'struct',name:'Entry'},'1175':{type:'struct',name:'WithAABB'},'45146':{type:'typedef',name:'Geom4dRef'},'44902':{type:'mod',name:'owned_allocation_cache'},'14855':{type:'mod',name:'collision_detector'},'45254':{type:'typedef',name:'Cone3d'},'28905':{type:'fn',name:'project_origin_with_max_dist'},'18824':{type:'struct',name:'IncrementalContactManifoldGenerator'},'1925':{type:'mod',name:'aabb_compound'},'15932':{type:'fn',name:'closest_points'},'24424':{type:'trait',name:'Simplex'},'2525':{type:'struct',name:'Ball'},'42040':{type:'mod',name:'hash'},'7507':{type:'struct',name:'Reflection'},'29126':{type:'mod',name:'minkowski_sampling'},'16014':{type:'fn',name:'toi'},'10913':{type:'mod',name:'ray'},'29610':{type:'trait',name:'InterferencesBroadPhase'},'45392':{type:'typedef',name:'AABB3d'},'38237':{type:'struct',name:'DBVT'},'41538':{type:'mod',name:'util'},'17387':{type:'struct',name:'ImplicitImplicit'},'21893':{type:'struct',name:'ConcaveGeomGeomFactory'},'8926':{type:'mod',name:'triangle'},'45092':{type:'typedef',name:'Segment4d'},'18011':{type:'fn',name:'collide'},'45042':{type:'typedef',name:'Cylinder4d'},'41546':{type:'struct',name:'Pair'},'33908':{type:'mod',name:'volumetric_cylinder'},'7729':{type:'struct',name:'Compound'},'34289':{type:'fn',name:'box_volume'},'14842':{type:'mod',name:'toi'},'1800':{type:'mod',name:'aabb_plane'},'35374':{type:'mod',name:'volumetric_convex'},'42567':{type:'fn',name:'key_from_pair'},'28717':{type:'fn',name:'project_origin'},'45308':{type:'typedef',name:'TriangleMesh3d'},'29735':{type:'mod',name:'dispatcher'},'1614':{type:'mod',name:'aabb_ball'},'2829':{type:'mod',name:'plane'},'10919':{type:'struct',name:'Ray'},'37498':{type:'mod',name:'implicit_minkowski_sum'},'45167':{type:'typedef',name:'Geom4d'},'35095':{type:'fn',name:'capsule_volume'},'41230':{type:'trait',name:'BVTVisitor'},'29712':{type:'trait',name:'RayCastBroadPhase'},'22294':{type:'trait',name:'DynamicCollisionDetector'},'34701':{type:'fn',name:'cone_volume'},'29582':{type:'mod',name:'broad_phase'},'32664':{type:'mod',name:'contact'},'9766':{type:'struct',name:'Mesh'},'45288':{type:'typedef',name:'Triangle3d'},'24561':{type:'struct',name:'RecursionTemplate'},'18343':{type:'fn',name:'toi'},'45504':{type:'typedef',name:'Segment2d'},'45373':{type:'typedef',name:'Geom3d'},'34688':{type:'mod',name:'volumetric_cone'},'7505':{type:'mod',name:'reflection'},'2118':{type:'mod',name:'aabb_segment'},'9705':{type:'mod',name:'mesh'},'36608':{type:'mod',name:'implicit_cylinder'},'30834':{type:'mod',name:'dbvt_broad_phase'},'42044':{type:'trait',name:'HashFun'},'4301':{type:'struct',name:'Cone'},'44988':{type:'mod',name:'aliases'},'45454':{type:'typedef',name:'Cylinder2d'},'8933':{type:'struct',name:'Triangle'},'37040':{type:'mod',name:'implicit_reflection'},'42945':{type:'struct',name:'HashMap'},'45352':{type:'typedef',name:'Geom3dRef'},'35698':{type:'trait',name:'Implicit'},'41540':{type:'mod',name:'pair'},'37155':{type:'mod',name:'implicit_triangle'},'29162':{type:'fn',name:'closest_points'},'45460':{type:'typedef',name:'Cone2d'},'18442':{type:'mod',name:'incremental_contact_manifold_generator'},'1682':{type:'mod',name:'aabb_cylinder'},'3754':{type:'mod',name:'capsule'},'15292':{type:'mod',name:'ball_ball'},'28582':{type:'fn',name:'closest_points_without_margin_with_max_dist'},'35442':{type:'mod',name:'volumetric_plane'},'35490':{type:'mod',name:'volumetric_mesh'},'2214':{type:'trait',name:'Geom'},'9735':{type:'trait',name:'MeshElement'},'45082':{type:'typedef',name:'Triangle4d'},'36341':{type:'mod',name:'implicit_cone'},'45124':{type:'typedef',name:'LineStrip4d'},'22035':{type:'struct',name:'GeomConcaveGeomFactory'},'10905':{type:'mod',name:'ray'},'45238':{type:'typedef',name:'Box3d'},'37967':{type:'fn',name:'cso_support_point_without_margin'},'44990':{type:'mod',name:'dim4'},'2203':{type:'mod',name:'geom'},'29144':{type:'trait',name:'PreferedSamplingDirections'},'36188':{type:'mod',name:'implicit_capsule'},'45270':{type:'typedef',name:'Compound3d'},'5631':{type:'typedef',name:'AnnotatedCSO'},'35853':{type:'mod',name:'implicit_box'},'37349':{type:'mod',name:'implicit_segment'},'1855':{type:'mod',name:'aabb_convex'},'1014':{type:'fn',name:'implicit_shape_aabb'},'22219':{type:'trait',name:'GeomGeomCollisionDetector'},'11172':{type:'trait',name:'RayCastWithTransform'},'42215':{type:'struct',name:'UintPairTWHash'},'3211':{type:'struct',name:'Box'},'33313':{type:'mod',name:'volumetric'},'30111':{type:'struct',name:'BruteForceBoundingVolumeBroadPhase'},'45026':{type:'typedef',name:'Ball4d'},'45054':{type:'typedef',name:'Plane4d'},'35187':{type:'mod',name:'volumetric_compound'},'27989':{type:'enum',name:'GJKResult'},'24422':{type:'mod',name:'simplex'},'45232':{type:'typedef',name:'Ball3d'},'45494':{type:'typedef',name:'Triangle2d'},'0':{type:'mod',name:'ncollide'},'27994':{type:'variant',name:'Projection'},'39839':{type:'mod',name:'bvt'},'27998':{type:'variant',name:'NoIntersection'},'7704':{type:'mod',name:'compound'},'5614':{type:'typedef',name:'CSO'},'1412':{type:'trait',name:'HasBoundingVolume'},'45048':{type:'typedef',name:'Cone4d'},'45248':{type:'typedef',name:'Cylinder3d'},'44904':{type:'struct',name:'OwnedAllocationCache'},'22685':{type:'struct',name:'GeomGeomDispatcher'},'35661':{type:'mod',name:'implicit'},'33369':{type:'trait',name:'Volumetric'},'38052':{type:'mod',name:'dbvt'},'27975':{type:'mod',name:'gjk'},'2057':{type:'mod',name:'aabb_triangle'},'45514':{type:'typedef',name:'TriangleMesh2d'},'20724':{type:'mod',name:'concave_geom_geom'},'15767':{type:'fn',name:'collide'},'24307':{type:'struct',name:'CollisionDetectorCloner'},'20108':{type:'mod',name:'one_shot_contact_manifold_generator'},'4298':{type:'mod',name:'cone'},'1418':{type:'trait',name:'BoundingVolume'},'42591':{type:'fn',name:'tomas_wang_hash'},'36089':{type:'mod',name:'implicit_ball'},'41414':{type:'struct',name:'BoundingVolumeInterferencesCollector'},'8358':{type:'struct',name:'Segment'},'45298':{type:'typedef',name:'Segment3d'},'2253':{type:'trait',name:'ConcaveGeom'},'42409':{type:'struct',name:'UintTWHash'},'4880':{type:'struct',name:'Cylinder'},'6070':{type:'struct',name:'AnnotatedMinkowskiSum'},'29585':{type:'trait',name:'BroadPhase'},'19':{type:'mod',name:'aabb'},'17355':{type:'mod',name:'implicit_implicit'},'40761':{type:'fn',name:'kdtree_partitioner'},'35080':{type:'mod',name:'volumetric_capsule'},'42054':{type:'struct',name:'StdHash'},'33658':{type:'fn',name:'ball_volume'},'24492':{type:'struct',name:'JohnsonSimplex'},'29996':{type:'mod',name:'brute_force_bounding_volume_broad_phase'},'34277':{type:'mod',name:'volumetric_box'},'29826':{type:'struct',name:'BruteForceBroadPhase'},'8':{type:'mod',name:'bounding_volume'},'45402':{type:'mod',name:'dim2'},'45444':{type:'typedef',name:'Box2d'},'14847':{type:'mod',name:'collide'},'41286':{type:'struct',name:'RayInterferencesCollector'},'37884':{type:'fn',name:'cso_support_point'},'27990':{type:'variant',name:'Intersection'},'22177':{type:'mod',name:'geom_geom'},'3203':{type:'mod',name:'box_geom'},'45579':{type:'typedef',name:'Geom2d'},'2179':{type:'mod',name:'geom'},'17120':{type:'fn',name:'collide'},'38050':{type:'mod',name:'partitioning'},'17259':{type:'fn',name:'toi'},'24466':{type:'mod',name:'johnson_simplex'},'32667':{type:'struct',name:'Contact'},'5456':{type:'mod',name:'convex'},'33335':{type:'trait',name:'InertiaTensor'},'28334':{type:'fn',name:'closest_points'},'29569':{type:'mod',name:'broad'},'29738':{type:'trait',name:'Dispatcher'},'45330':{type:'typedef',name:'LineStrip3d'},'1466':{type:'mod',name:'aabb_box'}};